#include<iostream>
#include<iomanip>
#include <fstream>
#include <string>
#include <vector>
using namespace std;

const double epsilon = 1/(1000);
float maxi = 0;
bool for_out = true;
void jakobs(ifstream &input, ofstream &output)
{
    int n;
    // popoxakannery sranov em artahaytel
    float iter[n];
    //for epsilon exit
    float prev[n]; 
    //output.precision(4);
    //output.setf(ios::fixed);
    input>>n;
	std::vector< std::vector<int> > a(n);
    for (int i=0;i<n;i++){
        for (int j=0;j<=n;j++){
				int elem;

                 input>>elem;
				 a[i].push_back(elem);
				 output<<a[i][j]<<" ";
	}
	iter[i] = 0;
	prev[i] = 0;
	output<<endl;
    }


/*	
int count = 0;
while (count<1){
		for (int i=0;i<n;i++)
		{
    	   	iter[i] = a[i][n];
			for (int j=0;j<n;j++)
			{
				if (j != i){
					iter[i] -= iter[j]*a[i][j]; 
				}
				else
					continue;
			}
			iter[i] /= a[i][i];
			cout<<iter[i]<<" ";
			//for_out = false;
			count++;
        }

		for (int i=0;i<n;i++)
		{
			maxi = iter[i]-prev[i];	
			if (abs(maxi) <= epsilon)
			{
				count++;
            	for_out = false;

			}
			if(count >= n)
				for_out = false;
			prev[i] = iter[i];
  			output<<prev[i]<<" ";
		}
	output<<endl;
	
}
*/    

}
int main(){
	ifstream input;
        ofstream output;
        input.open("input.txt");
        output.open("exit.txt");
        jakobs(input,output);
        input.close();
        output.close();
	return 0;
}
